{"version":3,"file":"static/js/387.c2bbccb1.chunk.js","mappings":"8LAYaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,6JClBWC,EAAST,EAAAA,GAAAA,GAAH,gJACC,SAAAU,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IAGF,SAAAQ,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IAIPU,EAASZ,EAAAA,GAAAA,EAAH,wGACJ,SAAAU,GAAC,OAAIA,EAAEC,MAAME,UAAUC,CAAtB,IACC,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,YAAYC,IAAxB,IACC,SAAAN,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IACT,SAAAQ,GAAC,OAAIA,EAAEC,MAAMM,OAAOC,SAAnB,IAGCC,EAAOnB,EAAAA,GAAAA,EAAH,uCACN,SAAAU,GAAC,OAAIA,EAAEC,MAAMM,OAAOG,SAAnB,I,SCwBZ,EAnCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GACfI,MAAK,SAAAC,GAAI,OAAIN,EAAWM,EAAKC,QAApB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACR,KAGF,SAACzB,EAAA,EAAD,CAAKoC,GAAG,KAAKC,GAAI,EAAGC,UAAU,sBAA9B,SACGf,EAAQgB,OAAS,EACdhB,EAAQiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,WAAxB,OACV,UAAClC,EAAD,YACE,UAACV,EAAA,EAAD,CAAK6C,QAAQ,OAAOC,WAAW,SAASC,GAAI,EAA5C,WACE,SAAC,MAAD,CACEC,MAAO,CACLC,KAAM,YACNC,SAAU,WAGd,UAAClD,EAAA,EAAD,CAAK6C,QAAQ,OAAOM,cAAc,SAASC,GAAI,EAA/C,WACE,SAACvC,EAAD,UAAS6B,KACT,SAAC,EAAD,UAAOE,EAAWS,MAAM,EAAG,aAI/B,uBAAIV,MAdOF,EADH,IAkBZ,0CAGT,C,yLCnCKa,EAAW,6BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,MAAM,GAAD,OACvBH,EADuB,uCACgBC,IAFvC,cACCG,EADD,gBAIQA,EAASC,OAJjB,0GAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BnC,GAA9B,uFACkBgC,MAAM,GAAD,OACvBH,EADuB,oBACH7B,EADG,oBACgB8B,EADhB,oBADvB,cACCG,EADD,gBAIQA,EAASC,OAJjB,0GAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCpC,GAAjC,uFACkBgC,MAAM,GAAD,OACvBH,EADuB,oBACH7B,EADG,4BACwB8B,EADxB,oBADvB,cACCG,EADD,gBAIQA,EAASC,OAJjB,0GAOA,SAAe/B,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,uFACkBgC,MAAM,GAAD,OACvBH,EADuB,oBACH7B,EADG,4BACwB8B,EADxB,2BADvB,cACCG,EADD,gBAIQA,EAASC,OAJjB,0GAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBN,MAAM,GAAD,OACvBH,EADuB,mCACYC,EADZ,kBAC6BQ,IAFpD,cACCL,EADD,gBAIQA,EAASC,OAJjB,0G","sources":["Box.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/movies-api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);\n","import styled from 'styled-components';\n\nexport const Review = styled.li`\n  padding-bottom: ${p => p.theme.space[5]}px;\n  border-bottom: 1px solid lightgrey;\n  &:not(:first-child) {\n    padding-top: ${p => p.theme.space[5]}px;\n  }\n`;\n\nexport const Author = styled.p`\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  margin-bottom: ${p => p.theme.space[2]}px;\n  color: ${p => p.theme.colors.secondary};\n`;\n\nexport const Date = styled.p`\n  color: ${p => p.theme.colors.lighttext};\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/movies-api';\nimport { FaUserCircle } from 'react-icons/fa';\nimport { Box } from 'Box';\nimport { Review, Author, Date } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviews(movieId)\n      .then(data => setReviews(data.results))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <Box as=\"ul\" pt={5} borderTop=\"1px solid lightgrey\">\n      {reviews.length > 0\n        ? reviews.map(({ id, author, content, created_at }) => (\n            <Review key={id}>\n              <Box display=\"flex\" alignItems=\"center\" mb={4}>\n                <FaUserCircle\n                  style={{\n                    fill: 'lightblue',\n                    fontSize: '50px',\n                  }}\n                />\n                <Box display=\"flex\" flexDirection=\"column\" ml={4}>\n                  <Author>{author}</Author>\n                  <Date>{created_at.slice(0, 10)}</Date>\n                </Box>\n              </Box>\n\n              <p>{content}</p>\n            </Review>\n          ))\n        : 'There are no reviews on this movie yet'}\n    </Box>\n  );\n};\nexport default Reviews;\n","// import axios from 'axios';\n\n// export const movieService = axios.create({\n//   baseURL: 'https://api.themoviedb.org',\n// });\n\nconst BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = 'bb66d39a29feb698f032f2613a49cacc';\n\nexport async function fetchTrending() {\n  const response = await fetch(\n    `${BASE_URL}/3/trending/all/day?api_key=${API_KEY}`\n  );\n  return await response.json();\n}\n\nexport async function fetchMovieById(movieId) {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.json();\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.json();\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return await response.json();\n}\n\nexport async function fetchMovieByName(query) {\n  const response = await fetch(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return await response.json();\n}\n"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","Review","p","theme","Author","fontSizes","l","fontWeights","bold","colors","secondary","Date","lighttext","useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviews","then","data","results","catch","error","console","log","as","pt","borderTop","length","map","id","author","content","created_at","display","alignItems","mb","style","fill","fontSize","flexDirection","ml","slice","BASE_URL","API_KEY","fetchTrending","fetch","response","json","fetchMovieById","fetchMovieCredits","fetchMovieByName","query"],"sourceRoot":""}