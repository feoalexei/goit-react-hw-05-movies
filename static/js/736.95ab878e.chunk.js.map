{"version":3,"file":"static/js/736.95ab878e.chunk.js","mappings":"8LAYaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,6JClBWC,EAAQT,EAAAA,GAAAA,IAAH,gIAIC,SAAAU,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,MAAlB,IACD,SAAAH,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IAGPY,EAAOd,EAAAA,GAAAA,EAAH,sEACA,SAAAU,GAAC,OAAIA,EAAEC,MAAMI,YAAYC,IAAxB,IACC,SAAAN,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IAGPe,EAAYjB,EAAAA,GAAAA,EAAH,uCACX,SAAAU,GAAC,OAAIA,EAAEC,MAAMO,OAAOC,SAAnB,I,SCgCZ,EAzCa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,IANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GACfI,MAAK,SAAAC,GAAK,OAAIN,EAAQM,EAAMP,KAAlB,IACVQ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACP,IAECF,EAEL,OACE,SAACtB,EAAA,EAAD,CACEkC,GAAG,KACHC,QAAQ,OACRC,QAAS,EACTC,oBAAoB,wCACpBC,GAAI,EACJC,UAAU,sBANZ,SAQGjB,EAAKkB,OAAS,EACXlB,EAAKmB,KAAI,SAAAC,GAAK,OACZ,2BACE,SAAChC,EAAD,CACEiC,IACED,EAAME,aAAN,0CACuCF,EAAME,cACzCC,EAENC,IAAKJ,EAAMK,QAEb,SAAChC,EAAD,UAAO2B,EAAMK,QACb,UAAC7B,EAAD,yBAAuBwB,EAAMM,eAVtBN,EAAMO,GADH,IAcd,4CAGT,C,yLC9CKC,EAAW,6BACXC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,MAAM,GAAD,OACvBH,EADuB,uCACgBC,IAFvC,cACCG,EADD,gBAIQA,EAASC,OAJjB,0GAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BhC,GAA9B,uFACkB6B,MAAM,GAAD,OACvBH,EADuB,oBACH1B,EADG,oBACgB2B,EADhB,oBADvB,cACCG,EADD,gBAIQA,EAASC,OAJjB,0GAOA,SAAe5B,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,uFACkB6B,MAAM,GAAD,OACvBH,EADuB,oBACH1B,EADG,4BACwB2B,EADxB,oBADvB,cACCG,EADD,gBAIQA,EAASC,OAJjB,0GAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCjC,GAAjC,uFACkB6B,MAAM,GAAD,OACvBH,EADuB,oBACH1B,EADG,4BACwB2B,EADxB,2BADvB,cACCG,EADD,gBAIQA,EAASC,OAJjB,0GAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBN,MAAM,GAAD,OACvBH,EADuB,mCACYC,EADZ,kBAC6BQ,IAFpD,cACCL,EADD,gBAIQA,EAASC,OAJjB,0G","sources":["Box.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/movies-api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);\n","import styled from 'styled-components';\n\nexport const Photo = styled.img`\n  width: 100%;\n  height: 250px;\n  object-fit: cover;\n  border-radius: ${p => p.theme.radii.normal};\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const Name = styled.p`\n  font-weight: ${p => p.theme.fontWeights.bold};\n  margin-bottom: ${p => p.theme.space[2]}px;\n`;\n\nexport const Character = styled.p`\n  color: ${p => p.theme.colors.lighttext};\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'services/movies-api';\nimport { Box } from 'Box';\nimport noPhoto from '../../images/no_image.jpg';\nimport { Photo, Name, Character } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieCredits(movieId)\n      .then(movie => setCast(movie.cast))\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  if (!cast) return;\n\n  return (\n    <Box\n      as=\"ul\"\n      display=\"grid\"\n      gridGap={5}\n      gridTemplateColumns=\"repeat(auto-fit, minmax(150px, auto))\"\n      pt={5}\n      borderTop=\"1px solid lightgrey\"\n    >\n      {cast.length > 0\n        ? cast.map(actor => (\n            <li key={actor.id}>\n              <Photo\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${actor.profile_path}`\n                    : noPhoto\n                }\n                alt={actor.name}\n              />\n              <Name>{actor.name}</Name>\n              <Character>Character: {actor.character}</Character>\n            </li>\n          ))\n        : 'There is no information about the actors'}\n    </Box>\n  );\n};\n\nexport default Cast;\n","const BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = 'bb66d39a29feb698f032f2613a49cacc';\n\nexport async function fetchTrending() {\n  const response = await fetch(\n    `${BASE_URL}/3/trending/all/day?api_key=${API_KEY}`\n  );\n  return await response.json();\n}\n\nexport async function fetchMovieById(movieId) {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.json();\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.json();\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return await response.json();\n}\n\nexport async function fetchMovieByName(query) {\n  const response = await fetch(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return await response.json();\n}\n"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","Photo","p","theme","radii","normal","Name","fontWeights","bold","Character","colors","lighttext","useState","cast","setCast","movieId","useParams","useEffect","fetchMovieCredits","then","movie","catch","error","console","log","as","display","gridGap","gridTemplateColumns","pt","borderTop","length","map","actor","src","profile_path","noPhoto","alt","name","character","id","BASE_URL","API_KEY","fetchTrending","fetch","response","json","fetchMovieById","fetchMovieReviews","fetchMovieByName","query"],"sourceRoot":""}