{"version":3,"file":"static/js/840.910ffc62.chunk.js","mappings":"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","sources":["Box.js","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/StarRating/StarRating.jsx","components/TrendList/TrendList.jsx","pages/Home.jsx","services/movies-api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);\n","import styled from 'styled-components';\n\nexport const Image = styled.img`\n  object-fit: cover;\n  width: 100%;\n  border-radius: ${p => p.theme.radii.normal};\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: ${p => p.theme.space[1]}px;\n`;\n\nexport const Year = styled.span`\n  display: block;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Box } from 'Box';\nimport PropTypes from 'prop-types';\nimport StarRating from 'components/StarRating';\nimport { Image, Title, Year } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <Box\n        as=\"ul\"\n        display=\"grid\"\n        gridGap={5}\n        gridTemplateColumns=\"repeat(auto-fit, minmax(200px, auto))\"\n        mt={5}\n      >\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <div>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                <Image\n                  src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n                  alt={movie.title || movie.name}\n                />\n                <Title>{movie.title || movie.name}</Title>\n                {movie.release_date && (\n                  <Year>({movie?.release_date.slice(0, 4)})</Year>\n                )}\n              </Link>{' '}\n              <StarRating rate={movie.vote_average} />\n            </div>\n          </li>\n        ))}\n      </Box>\n    </>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.array,\n};\n","import { Box } from 'Box';\nimport { FaStar, FaRegStar } from 'react-icons/fa';\n\n// Generates movie rating in a form of stars according to the\nconst StarRating = ({ rate }) => {\n  const generateStars = rate => {\n    return Array(Math.floor(rate)).fill('*');\n  };\n\n  const generateBlankStars = rate => {\n    return Array(Math.ceil(10 - rate)).fill('-');\n  };\n\n  return (\n    <Box as=\"div\" display=\"flex\">\n      <Box as=\"ul\" display=\"flex\">\n        {generateStars(rate).map((_, i) => (\n          <li key={i}>\n            <FaStar\n              style={{\n                fill: 'darkgoldenrod',\n                fontSize: '14px',\n              }}\n            />\n          </li>\n        ))}\n      </Box>\n      <Box as=\"ul\" display=\"flex\" mr={3}>\n        {generateBlankStars(rate).map((_, i) => (\n          <li key={i}>\n            <FaRegStar\n              style={{\n                fill: 'darkgoldenrod',\n                fontSize: '14px',\n              }}\n            />\n          </li>\n        ))}\n      </Box>\n      <p>({rate.toFixed(1)}/10)</p>\n    </Box>\n  );\n};\nexport default StarRating;\n","import { useState, useEffect } from 'react';\nimport { fetchTrending } from 'services/movies-api';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst TrendList = () => {\n  const [trendList, setTrendList] = useState([]);\n\n  useEffect(() => {\n    fetchTrending()\n      .then(movies => setTrendList(movies.results))\n      .catch(error => console.log(error));\n  }, []);\n\n  return (\n    <>\n      <MoviesList movies={trendList} />\n    </>\n  );\n};\n\nexport default TrendList;\n","import TrendList from 'components/TrendList';\n\nconst Home = () => {\n  return (\n    <main>\n      <h2>Trending today:</h2>\n      <TrendList />\n    </main>\n  );\n};\nexport default Home;\n","const BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = 'bb66d39a29feb698f032f2613a49cacc';\n\nexport async function fetchTrending() {\n  const response = await fetch(\n    `${BASE_URL}/3/trending/all/day?api_key=${API_KEY}`\n  );\n  return await response.json();\n}\n\nexport async function fetchMovieById(movieId) {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.json();\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.json();\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await fetch(\n    `${BASE_URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return await response.json();\n}\n\nexport async function fetchMovieByName(query) {\n  const response = await fetch(\n    `${BASE_URL}/3/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return await response.json();\n}\n"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","Image","p","theme","radii","normal","Title","Year","movies","location","useLocation","as","display","gridGap","gridTemplateColumns","mt","map","movie","to","id","state","from","src","poster_path","alt","title","name","release_date","slice","StarRating","rate","vote_average","Array","Math","floor","fill","generateStars","_","i","style","fontSize","mr","ceil","generateBlankStars","toFixed","useState","trendList","setTrendList","useEffect","fetchTrending","then","results","catch","error","console","log","MoviesList","BASE_URL","API_KEY","fetch","response","json","fetchMovieById","movieId","fetchMovieCredits","fetchMovieReviews","fetchMovieByName","query"],"sourceRoot":""}