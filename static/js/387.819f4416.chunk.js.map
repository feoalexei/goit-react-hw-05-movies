{"version":3,"file":"static/js/387.819f4416.chunk.js","mappings":"8LAYaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,0LClBWC,EAAST,EAAAA,GAAAA,GAAH,gJACC,SAAAU,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IAGF,SAAAQ,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IAIPU,EAASZ,EAAAA,GAAAA,EAAH,wGACJ,SAAAU,GAAC,OAAIA,EAAEC,MAAME,UAAUC,CAAtB,IACC,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,YAAYC,IAAxB,IACC,SAAAN,GAAC,OAAIA,EAAEC,MAAMT,MAAM,EAAlB,IACT,SAAAQ,GAAC,OAAIA,EAAEC,MAAMM,OAAOC,SAAnB,IAGCC,EAAOnB,EAAAA,GAAAA,EAAH,uCACN,SAAAU,GAAC,OAAIA,EAAEC,MAAMM,OAAOG,SAAnB,I,SC8BZ,EAzCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,gHAEMC,EAAAA,EAAAA,IAAkBJ,GAFxB,gBAEZK,EAFY,EAEZA,QACRN,EAAWM,GAHS,sDAKd,IAAIC,MAAM,KAAMC,SALF,yDAAH,qDAQrBJ,GACD,GAAE,CAACH,KAGF,SAACzB,EAAA,EAAD,CAAKiC,GAAG,KAAKC,GAAI,EAAGC,UAAU,sBAA9B,SACGZ,EAAQa,OAAS,EACdb,EAAQc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,WAAxB,OACV,UAAC/B,EAAD,YACE,UAACV,EAAA,EAAD,CAAK0C,QAAQ,OAAOC,WAAW,SAASC,GAAI,EAA5C,WACE,SAAC,MAAD,CACEC,MAAO,CACLC,KAAM,YACNC,SAAU,WAGd,UAAC/C,EAAA,EAAD,CAAK0C,QAAQ,OAAOM,cAAc,SAASC,GAAI,EAA/C,WACE,SAACpC,EAAD,UAAS0B,KACT,SAAC,EAAD,UAAOE,EAAWS,MAAM,EAAG,aAI/B,uBAAIV,MAdOF,EADH,IAkBZ,0CAGT,C,yLC7CYa,E,QAAeC,EAAAA,OAAa,CACvCC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAa,mCAAG,sGACJL,EAAaM,IAAI,qBADb,uBACnBC,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,qDAKbC,EAAc,mCAAG,WAAMlC,GAAN,yFACL0B,EAAaM,IAAb,iBAA2BhC,IADtB,uBACpBiC,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdE,EAAiB,mCAAG,WAAMnC,GAAN,yFACR0B,EAAaM,IAAb,iBAA2BhC,EAA3B,aADQ,uBACvBiC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjB7B,EAAiB,mCAAG,WAAMJ,GAAN,yFACR0B,EAAaM,IAAb,iBAA2BhC,EAA3B,aADQ,uBACvBiC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBG,EAAgB,mCAAG,WAAMC,GAAN,yFACPX,EAAaM,IAAb,8BAAwCK,IADjC,uBACtBJ,EADsB,EACtBA,KADsB,SAEjBA,EAFiB,mFAAH,qD","sources":["Box.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/movies-api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);\n","import styled from 'styled-components';\n\nexport const Review = styled.li`\n  padding-bottom: ${p => p.theme.space[5]}px;\n  border-bottom: 1px solid lightgrey;\n  &:not(:first-child) {\n    padding-top: ${p => p.theme.space[5]}px;\n  }\n`;\n\nexport const Author = styled.p`\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  margin-bottom: ${p => p.theme.space[2]}px;\n  color: ${p => p.theme.colors.secondary};\n`;\n\nexport const Date = styled.p`\n  color: ${p => p.theme.colors.lighttext};\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/movies-api';\nimport { FaUserCircle } from 'react-icons/fa';\nimport { Box } from 'Box';\nimport { Review, Author, Date } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieReviews = async () => {\n      try {\n        const { results } = await fetchMovieReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        throw new Error(error.message);\n      }\n    };\n    getMovieReviews();\n  }, [movieId]);\n\n  return (\n    <Box as=\"ul\" pt={5} borderTop=\"1px solid lightgrey\">\n      {reviews.length > 0\n        ? reviews.map(({ id, author, content, created_at }) => (\n            <Review key={id}>\n              <Box display=\"flex\" alignItems=\"center\" mb={4}>\n                <FaUserCircle\n                  style={{\n                    fill: 'lightblue',\n                    fontSize: '50px',\n                  }}\n                />\n                <Box display=\"flex\" flexDirection=\"column\" ml={4}>\n                  <Author>{author}</Author>\n                  <Date>{created_at.slice(0, 10)}</Date>\n                </Box>\n              </Box>\n\n              <p>{content}</p>\n            </Review>\n          ))\n        : 'There are no reviews on this movie yet'}\n    </Box>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nexport const movieService = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'bb66d39a29feb698f032f2613a49cacc',\n  },\n});\n\nexport const fetchTrending = async () => {\n  const { data } = await movieService.get('/trending/all/day');\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await movieService.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const { data } = await movieService.get(`/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await movieService.get(`/movie/${movieId}/reviews`);\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await movieService.get(`/search/movie?query=${query}`);\n  return await data;\n};\n"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","Review","p","theme","Author","fontSizes","l","fontWeights","bold","colors","secondary","Date","lighttext","useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","fetchMovieReviews","results","Error","message","as","pt","borderTop","length","map","id","author","content","created_at","display","alignItems","mb","style","fill","fontSize","flexDirection","ml","slice","movieService","axios","baseURL","params","api_key","fetchTrending","get","data","fetchMovieById","fetchMovieCredits","fetchMovieByName","query"],"sourceRoot":""}